package fr.karadimas.gpmsi.da

import java.sql.PreparedStatement
import java.sql.ResultSet

/**
 * Classe de base pour une d�finition de colonne (classe abstraite), 
 * Ancetre de toutes les colonnes typ�es
 */
abstract class ColumnDef {
    private String _name
    private Dao owner
    private boolean autogenerated = false
    
    /** Get the name of the column that was declared with this datatype */
    String getName() { return _name }
    void setName(String name_p) { this._name = name_p }
    
    /** Get the owner of this column (usually a Table) */
    Dao getOwner() { return owner }
    /** Sets the owner of this column */
    void setOwner(Dao owner) { this.owner = owner }
    
    /** Retourner la longueur maximum de la colonne lorsque cela a lieu d'etre.
     * Par defaut retourne 0
     */
    int getMaxLength() { return 0 }
    
    /** 
     * La valeur de cette colonne est-elle autog�n�r�e si la valeur null est
     * donn�e � ins�rer ?
     */
    boolean isAutogenerated() { return autogenerated }
    ColumnDef setAutogenerated(boolean v) { this.autogenerated = v ; return this }
    
     /** make a correctly typed value, that can be inserted into the database,
      * from the given String.
      * Empty strings (of length 0) are converted to null
      * If the maximum length is exceeded, and the preference is not set to
      * cutWhenOverflow, a MaximumSizeExceededException is thrown
      */
    abstract Object stringToValue(String str, DaPreferences prefs) 
        throws MaximumSizeExceededException
        
    /** make a String from the given value (that is usually read from the
     * database). Nulls are converted to empty Strings
     */
    abstract String valueToString(Object val, DaPreferences prefs)
    
    /** Set value in PreparedStatement (including correct type for setNull) */
    abstract void setPsValue(PreparedStatement ps, int index, Object val)
    
    /** Get value from ResultSet */
    abstract Object getRsValue(ResultSet rs, int index)
    
}

